#../nb run driver=cqld3 workload=all-workload.yaml tags=phase:rampup threads=auto cycles=3000000 cyclerate=15000 async=64  --progress console:10s loadbalancing='LAP(s=10),TAP()'  pooling=8:16:10000,8:16:10000
description: |
  This workload emulates a Web Sales from Retail
bindings:
  wr_order_number: Uniform(0,9999999)
  wr_item_sk:  Uniform(0,281758) 
  wr_web_page_sk:  Uniform(0,400)
  wr_returned_date_sk: Uniform(44195,44825)
  wr_returned_time_sk: Uniform(0,86399) 
  wr_returning_addr_sk: Uniform(0,156532) 
  wr_returning_cdemo_sk: Uniform(0,1920799) 
  wr_returning_customer_sk: Uniform(0,1920799)
  wr_refunded_cdemo_sk: Uniform(0,1920799) 
  wr_refunded_customer_sk: Uniform(0,1920799)
  wr_refunded_hdemo_sk: Uniform(0,7200) 
  wr_account_credit: Normal(0.0,9999.0)
  wr_returning_hdemo_sk: Uniform(0,7200) 
  wr_refunded_addr_sk: Uniform(0,156532) 
  wr_reason_sk: Uniform(0,233) 
  wr_fee: Normal(0.0,9999.0)
  wr_net_loss: Normal(0.0,9999.0)
  wr_refunded_cash:  Normal(0.0,9999.0)
  wr_return_amt:  Normal(0.0,9999.0)
  wr_return_amt_inc_tax:  Normal(0.0,9999.0)
  wr_return_quantity: Uniform(0,2000000) -> int
  wr_return_ship_cost:  Normal(0.0,9999.0)
  wr_return_tax:  Normal(0.0,9999.0)
  wr_reversed_charge:  Normal(0.0,9999.0)
  ws_item_sk:  Uniform(0,281758) 
  ws_order_number: Uniform(0,9999999)
  ws_sold_date_sk: Uniform(44195,44825)  
  ws_sold_time_sk: Uniform(0,86399) 
  ws_warehouse_sk: Uniform(0,11) 
  ws_ship_date_sk: Uniform(44195,44825)  
  ws_bill_customer_sk: Uniform(0,1920799)
  ws_bill_cdemo_sk: Uniform(0,1920799) 
  ws_bill_hdemo_sk: Uniform(0,7200) 
  ws_bill_addr_sk: Uniform(0,156532) 
  ws_ship_customer_sk: Uniform(0,1920799)
  ws_ship_cdemo_sk: Uniform(0,1920799) 
  ws_ship_hdemo_sk: Uniform(0,7200) 
  ws_ship_addr_sk: Uniform(0,156532) 
  ws_web_page_sk: Uniform(0,400)
  ws_promo_sk: Uniform(0,2003) 
  ws_web_site_sk: Uniform(0,29) 
  ws_ship_mode_sk: Uniform(0,20)
  ws_quantity:  Uniform(0,2000000) -> int
  ws_wholesale_cost: Normal(0.0,9999.0)
  ws_list_price:  Normal(0.0,9999.0)
  ws_sales_price:  Normal(0.0,9999.0)
  ws_ext_discount_amt:  Normal(0.0,9999.0)
  ws_ext_sales_price:  Normal(0.0,9999.0)
  ws_ext_wholesale_cost:  Normal(0.0,9999.0)
  ws_ext_list_price:  Normal(0.0,9999.0)
  ws_ext_tax:  Normal(0.0,9999.0)
  ws_coupon_amt:  Normal(0.0,9999.0)
  ws_ext_ship_cost:  Normal(0.0,9999.0)
  ws_net_paid:  Normal(0.0,9999.0)
  ws_net_paid_inc_tax:  Normal(0.0,9999.0)
  ws_net_paid_inc_ship:  Normal(0.0,9999.0)
  ws_net_paid_inc_ship_tax:  Normal(0.0,9999.0)
  ws_net_profit:  Normal(0.0,9999.0)
  sr_item_sk:  Uniform(0,281758) 
  sr_store_sk:  Uniform(0,37) 
  sr_return_time_sk: Uniform(0,86399) 
  sr_returned_date_sk: Uniform(44195,44825)
  sr_cdemo_sk: Uniform(0,1920799) 
  sr_customer_sk: Uniform(0,1920799)
  sr_addr_sk: Uniform(0,156532) 
  sr_hdemo_sk: Uniform(0,7200) 
  sr_reason_sk: Uniform(0,233) 
  sr_ticket_number: Uniform(0,999999)
  sr_fee: Normal(0.0,9999.0)
  sr_net_loss: Normal(0.0,9999.0)
  sr_refunded_cash: Normal(0.0,9999.0) 
  sr_return_amt: Normal(0.0,9999.0)
  sr_return_amt_inc_tax: Normal(0.0,9999.0)
  sr_return_quantity: Uniform(0,2000000) -> int
  sr_return_ship_cost: Normal(0.0,9999.0)
  sr_return_tax: Normal(0.0,9999.0)
  sr_reversed_charge: Normal(0.0,9999.0)
  sr_store_credit: Normal(0.0,9999.0)
  ss_item_sk:  Uniform(0,281758) 
  ss_ticket_number: Uniform(0,999999)
  ss_addr_sk: Uniform(0,156532) 
  ss_cdemo_sk: Uniform(0,1920799) 
  ss_store_sk:  Uniform(0,37)
  ss_hdemo_sk: Uniform(0,7200) 
  ss_customer_sk: Uniform(0,1920799)
  ss_promo_sk: Uniform(0,2003) 
  ss_sold_date_sk: Uniform(44195,44825)
  ss_sold_time_sk: Uniform(0,86399) 
  ss_coupon_amt: Normal(0.0,9999.0)
  ss_ext_discount_amt: Normal(0.0,9999.0)
  ss_ext_list_price: Normal(0.0,9999.0)
  ss_ext_sales_price: Normal(0.0,9999.0)
  ss_ext_tax: Normal(0.0,9999.0)
  ss_ext_wholesale_cost: Normal(0.0,9999.0)
  ss_list_price: Normal(0.0,9999.0)
  ss_net_paid: Normal(0.0,9999.0)
  ss_net_paid_inc_tax: Normal(0.0,9999.0)
  ss_net_profit: Normal(0.0,9999.0)
  ss_quantity: Uniform(0,2000000) -> int
  ss_sales_price: Normal(0.0,9999.0)
  ss_wholesale_cost: Normal(0.0,9999.0)  
  cs_item_sk:  Uniform(0,281758) 
  cs_order_number: Uniform(0,999999)
  cs_ship_addr_sk: Uniform(0,156532) 
  cs_ship_cdemo_sk: Uniform(0,1920799) 
  cs_ship_customer_sk:  Uniform(0,1920799) 
  cs_ship_date_sk: Uniform(44195,44825)
  cs_ship_hdemo_sk: Uniform(0,7200) 
  cs_ship_mode_sk:  Uniform(0,20)
  cs_sold_date_sk:  Uniform(44195,44825)
  cs_sold_time_sk: Uniform(0,86399) 
  cs_warehouse_sk:  Uniform(0,11)
  cs_bill_addr_sk: Uniform(0,156532) 
  cs_bill_cdemo_sk: Uniform(0,1920799) 
  cs_bill_customer_sk:  Uniform(0,1920799) 
  cs_bill_hdemo_sk:  Uniform(0,7200) 
  cs_call_center_sk: Uniform(0,6)
  cs_catalog_page_sk: Uniform(0,11718)
  cs_promo_sk: Uniform(0,2003) 
  cs_quantity: Uniform(0,2000000) -> int
  cs_coupon_amt:  Normal(0.0,9999.0)
  cs_ext_discount_amt: Normal(0.0,9999.0)
  cs_ext_list_price: Normal(0.0,9999.0)
  cs_ext_sales_price: Normal(0.0,9999.0)
  cs_ext_ship_cost: Normal(0.0,9999.0)
  cs_ext_tax: Normal(0.0,9999.0)
  cs_ext_wholesale_cost: Normal(0.0,9999.0)
  cs_list_price: Normal(0.0,9999.0)
  cs_net_paid: Normal(0.0,9999.0)
  cs_net_paid_inc_ship: Normal(0.0,9999.0)
  cs_net_paid_inc_ship_tax: Normal(0.0,9999.0)
  cs_net_paid_inc_tax: Normal(0.0,9999.0)
  cs_net_profit: Normal(0.0,9999.0)
  cs_wholesale_cost: Normal(0.0,9999.0)
  cs_sales_price: Normal(0.0,9999.0)
blocks:
  - tags:
      phase: main
    params:
      cl: LOCAL_QUORUM
      prepared: true
    statements:
     - read-statement-store-returns: |
         select * from tpcds.store_returns where sr_item_sk = {sr_item_sk} and sr_ticket_number ={sr_ticket_number};
     - read-statement-store_sales: |
         select * from tpcds.store_sales where ss_item_sk = {ss_item_sk} and ss_ticket_number = {ss_ticket_number};
     - read-statement-web-sales: |
         select * from tpcds.web_sales where ws_item_sk =  {ws_item_sk} and ws_order_number = {ws_order_number};
     - read-statement-web-returns: |
         select * from tpcds.web_returns where wr_order_number={wr_order_number} and wr_item_sk={wr_item_sk};
     - read-statement-catalog_sales: |
         select * from tpcds.catalog_sales where cs_item_sk = {cs_item_sk} and cs_order_number = {cs_order_number};

